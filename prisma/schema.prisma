// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int                     @id @default(autoincrement())
  email              String                  @unique
  password           String
  username           String                  @unique
  firstName          String?
  lastName           String?
  posts              Post[]
  userGroups         GroupUser[]
  groupGeneralTokens GeneralTokenGroupUser[]
  joinGroupRequests  JoinGroupRequest[]
}

model Post {
  id       Int      @id @default(autoincrement())
  postDate DateTime @default(now())
  title    String
  content  String
  author   User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId Int
  group    Group    @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId  Int
}

model Group {
  id                Int                     @id @default(autoincrement())
  name              String                  @unique @db.VarChar(100)
  title             String                  @db.VarChar(100)
  description       String                  @db.VarChar(300)
  posts             Post[]
  groupUsers        GroupUser[]
  userGeneralTokens GeneralTokenGroupUser[]
  joinGroupRequests JoinGroupRequest[]
}

model GeneralToken {
  id          String                  @id
  title       String                  @unique
  description String
  groupsUsers GeneralTokenGroupUser[]
}

model GroupUser {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  group      Group    @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId    Int
  dateJoined DateTime @default(now())

  @@unique([userId, groupId])
}

model GeneralTokenGroupUser {
  id             Int          @id @default(autoincrement())
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         Int
  group          Group        @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId        Int
  generalToken   GeneralToken @relation(fields: [generalTokenId], references: [id])
  generalTokenId String
  dateAssigned   DateTime     @default(now())

  @@unique([userId, groupId, generalTokenId])
}

model JoinGroupRequest {
  id               Int      @id @default(autoincrement())
  requestDate      DateTime @default(now())
  userRequesting   User     @relation(fields: [userRequestingId], references: [id], onDelete: Cascade)
  userRequestingId Int
  group            Group    @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId          Int

  @@unique([userRequestingId, groupId])
}
